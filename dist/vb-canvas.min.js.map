{"version":3,"file":"vb-canvas.min.js","sources":["../src/defaults.js","../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/isObject.js","../node_modules/lodash-es/toNumber.js","../node_modules/lodash-es/isSymbol.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/now.js","../src/styles.js","../node_modules/lodash-es/debounce.js","../src/transformContextMatrix.js","../src/restoreFromHistory.js","../src/index.js","../src/domUtils.js","../src/createContextHistory.js","../src/createObservableContext.js","../src/setCanvasHTMLElementDimensions.js","../src/observeElDimensions.js"],"sourcesContent":["export default {\n  target: document.body,\n  viewBox: [0, 0, 300, 150],\n  autoAspectRatio: true,\n  scaleMode: 'fit',\n  resolution: window.devicePixelRatio || 1,\n  static: false,\n};\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nexport default index;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","function createBaseCanvasStyles() {\n  const baseStyleSheet = document.createElement('style');\n  const firstStyleSheet = document.styleSheets[0].ownerNode;\n\n  document.head.insertBefore(baseStyleSheet, firstStyleSheet);\n\n  baseStyleSheet.sheet.insertRule(\n    '.vb-canvas { width: 100%; max-width: 100%; }',\n    0\n  );\n}\n\nfunction createCanvasStyleSheet(id) {\n  const canvasStyleSheet = document.createElement('style');\n  const firstStyleSheet = document.styleSheets[0].ownerNode;\n\n  canvasStyleSheet.setAttribute('data-canvas-id', id);\n\n  document.head.insertBefore(canvasStyleSheet, firstStyleSheet);\n\n  return canvasStyleSheet.sheet;\n}\n\nexport { createCanvasStyleSheet, createBaseCanvasStyles };\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","function calculateAspectRatio(\n  srcWidth,\n  srcHeight,\n  maxWidth,\n  maxHeight,\n  scaleMode\n) {\n  let ratio;\n\n  if (scaleMode === 'fit') {\n    ratio = Math.min(maxWidth / srcWidth, maxHeight / srcHeight);\n  } else {\n    ratio = Math.max(maxWidth / srcWidth, maxHeight / srcHeight);\n  }\n\n  return { fitWidth: srcWidth * ratio, fitHeight: srcHeight * ratio };\n}\n\nfunction clipCtx(ctx, viewBoxWidth, viewBoxHeight) {\n  ctx.beginPath(viewBoxWidth, viewBoxHeight);\n  ctx.rect(0, 0, viewBoxWidth, viewBoxHeight);\n  ctx.clip();\n  ctx.closePath();\n}\n\nfunction transformContextMatrix({ ctx, viewBox, resolution, scaleMode }) {\n  const viewBoxWidth = viewBox[2];\n  const viewBoxHeight = viewBox[3];\n\n  let {\n    width: canvasWidth,\n    height: canvasHeight,\n  } = ctx.canvas.getBoundingClientRect();\n\n  canvasWidth *= resolution;\n  canvasHeight *= resolution;\n\n  const { fitWidth, fitHeight } = calculateAspectRatio(\n    viewBoxWidth,\n    viewBoxHeight,\n    canvasWidth,\n    canvasHeight,\n    scaleMode\n  );\n\n  const scaleX = fitWidth / viewBoxWidth;\n  const scaleY = fitHeight / viewBoxHeight;\n\n  const translateX = (canvasWidth - fitWidth) / 2;\n  const translateY = (canvasHeight - fitHeight) / 2;\n\n  ctx.setTransform(scaleX, 0, 0, scaleY, translateX, translateY);\n\n  clipCtx(ctx, viewBoxWidth, viewBoxHeight);\n}\n\nexport { transformContextMatrix };\n","function restoreFromHistory(ctx, history) {\n  for (const entry of history.entries) {\n    if (entry.type === 'function') {\n      ctx[entry.name].apply(ctx, entry.args);\n    } else {\n      ctx[entry.name] = entry.args;\n    }\n  }\n}\n\nexport { restoreFromHistory };\n","import DEFAULTS from './defaults';\n\nimport {\n  resolveTarget,\n  createCanvasHTMLElement,\n  getCanvasContext,\n  mountCanvasToDOM,\n  randomID,\n} from './domUtils';\n\nimport { createContextHistory } from './createContextHistory';\nimport { createObservableContext } from './createObservableContext';\nimport { observeElDimensions } from './observeElDimensions';\nimport { setCanvasHTMLElementDimensions } from './setCanvasHTMLElementDimensions';\nimport { transformContextMatrix } from './transformContextMatrix';\nimport { restoreFromHistory } from './restoreFromHistory';\nimport { createCanvasStyleSheet, createBaseCanvasStyles } from './styles';\n\ncreateBaseCanvasStyles();\n\nfunction create(opts) {\n  opts = Object.assign(DEFAULTS, opts);\n  opts.target = resolveTarget(opts.target);\n\n  const canvasID = randomID();\n\n  const history = createContextHistory();\n\n  const canvasHTMLElement = createCanvasHTMLElement(canvasID);\n  const canvasStyleSheet = createCanvasStyleSheet(canvasID);\n\n  const baseContext = getCanvasContext(canvasHTMLElement);\n  const observableContext = createObservableContext(\n    baseContext,\n    (type, name, args) => {\n      history.push(type, name, args);\n    }\n  );\n\n  function resizeCanvas() {\n    setCanvasHTMLElementDimensions({\n      id: canvasID,\n      el: canvasHTMLElement,\n      autoAspectRatio: opts.autoAspectRatio,\n      viewBox: opts.viewBox,\n      resolution: opts.resolution,\n      styleSheet: canvasStyleSheet,\n    });\n\n    transformContextMatrix({\n      ctx: baseContext,\n      viewBox: opts.viewBox,\n      resolution: opts.resolution,\n      scaleMode: opts.scaleMode,\n    });\n\n    if (opts.static) {\n      restoreFromHistory(baseContext, history);\n    }\n  }\n\n  mountCanvasToDOM(opts.target, canvasHTMLElement);\n\n  resizeCanvas();\n\n  observeElDimensions(canvasHTMLElement, resizeCanvas);\n\n  return {\n    el: canvasHTMLElement,\n    ctx: opts.static ? observableContext : baseContext,\n  };\n}\n\nexport { create };\n","function resolveTarget(target) {\n  if (typeof target === 'string') {\n    return document.querySelector(target);\n  } else {\n    return target;\n  }\n}\n\nfunction createCanvasHTMLElement(id) {\n  const el = document.createElement('canvas');\n\n  el.classList.add('vb-canvas');\n  el.classList.add(id);\n\n  return el;\n}\n\nfunction getCanvasContext(canvasHTMLElement) {\n  return canvasHTMLElement.getContext('2d');\n}\n\nfunction mountCanvasToDOM(target, el) {\n  target.appendChild(el);\n}\n\n// https://gist.github.com/gordonbrander/2230317\nfunction randomID() {\n  // Math.random should be unique because of its seeding algorithm.\n  // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n  // after the decimal.\n  return '_' + Math.random().toString(36).substr(2, 9);\n}\n\nexport {\n  resolveTarget,\n  createCanvasHTMLElement,\n  getCanvasContext,\n  mountCanvasToDOM,\n  randomID,\n};\n","function createContextHistory() {\n  const store = new Map();\n  let position = 0;\n\n  return {\n    get entries() {\n      return store.values();\n    },\n    get size() {\n      return store.size;\n    },\n    push(type, name, args) {\n      store.set(position, { type, name, args });\n\n      position++;\n    },\n    clear() {\n      store.clear();\n    },\n  };\n}\n\nexport { createContextHistory };\n","function createObservableContext(baseContext, observe) {\n  return new Proxy(baseContext, {\n    get(target, name) {\n      if (typeof target[name] === 'function') {\n        return function () {\n          target[name].apply(target, arguments);\n\n          observe('function', name, [...arguments]);\n        };\n      } else {\n        return target[name];\n      }\n    },\n    set(target, name, val) {\n      target[name] = val;\n\n      observe('set', name, val);\n\n      // succesful operation ✅\n      return true;\n    },\n  });\n}\n\nexport { createObservableContext };\n","function calculateHeightFromAspectRatio(el, viewBox) {\n  const width = el.getBoundingClientRect().width;\n  const aspectRatioPercentage = viewBox[3] / viewBox[2];\n\n  return width * aspectRatioPercentage + 'px';\n}\n\nfunction setCanvasHTMLElementDimensions({\n  id,\n  el,\n  autoAspectRatio,\n  viewBox,\n  resolution,\n  styleSheet,\n}) {\n  if (autoAspectRatio) {\n    if (styleSheet.rules.length) styleSheet.deleteRule(0);\n\n    styleSheet.insertRule(\n      `.${id} { height: ${calculateHeightFromAspectRatio(el, viewBox)} }`,\n      0\n    );\n  }\n\n  const { width, height } = el.getBoundingClientRect();\n\n  el.width = width * resolution;\n  el.height = height * resolution;\n}\n\nexport { setCanvasHTMLElementDimensions };\n","import ResizeObserver from 'resize-observer-polyfill';\nimport { debounce } from 'lodash-es';\n\nfunction observeElDimensions(el, callback) {\n  let { width: prevWidth, height: prevHeight } = el.getBoundingClientRect();\n\n  const resizeObserver = new ResizeObserver(\n    debounce(([entry]) => {\n      const { width, height } = entry.target.getBoundingClientRect();\n\n      // prevent infinite resize loops if canvas CSS dimensions are not explicitely set\n\n      if (width !== prevWidth || height !== prevHeight) {\n        callback(entry);\n\n        prevWidth = width;\n        prevHeight = height;\n      }\n    }, 500)\n  );\n\n  resizeObserver.observe(el);\n}\n\nexport { observeElDimensions };\n"],"names":["target","document","body","viewBox","autoAspectRatio","scaleMode","resolution","window","devicePixelRatio","static","MapShim","Map","getIndex","arr","key","result","some","entry","index","class_1","__entries__","Object","defineProperty","prototype","get","this","length","enumerable","configurable","set","value","push","delete","entries","splice","has","clear","forEach","callback","ctx","_i","_a","call","isBrowser","global$1","global","Math","self","Function","requestAnimationFrame$1","requestAnimationFrame","bind","setTimeout","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","observer","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","addEventListener","observe","attributes","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","props","keys","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","arguments","reduce","size","position","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","left","right","vertPad","top","bottom","width","height","boxSizing","round","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","abs","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","create","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","_this","observation","map","WeakMap","ResizeObserver","method","apply","freeGlobal","freeSelf","root","Symbol","objectProto","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","baseGetTag","isOwn","tag","unmasked","e","getRawTag","objectToString","isObject","type","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","isObjectLike","isSymbol","other","valueOf","replace","isBinary","test","slice","baseStyleSheet","firstStyleSheet","nativeMax","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","clearTimeout","cancel","flush","transformContextMatrix","viewBoxWidth","viewBoxHeight","canvas","getBoundingClientRect","canvasWidth","canvasHeight","srcWidth","srcHeight","maxWidth","maxHeight","ratio","fitWidth","fitHeight","calculateAspectRatio","scaleX","scaleY","translateX","translateY","setTransform","beginPath","clip","closePath","clipCtx","restoreFromHistory","history","name","createElement","styleSheets","ownerNode","head","insertBefore","sheet","insertRule","opts","assign","DEFAULTS","querySelector","store","id","el","canvasID","random","substr","values","canvasHTMLElement","classList","add","canvasStyleSheet","setAttribute","createCanvasStyleSheet","baseContext","getContext","getCanvasContext","observableContext","Proxy","val","createObservableContext","resizeCanvas","styleSheet","rules","deleteRule","calculateHeightFromAspectRatio","setCanvasHTMLElementDimensions","appendChild","mountCanvasToDOM","prevWidth","prevHeight","observeElDimensions"],"mappings":"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"}